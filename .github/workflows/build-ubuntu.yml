name: build-ubuntu

on: push

jobs:
  test:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        build: [Debug, Release]
        standard: [cxx23]

    defaults:
      run:
        shell: bash

    name: "${{matrix.standard}}-${{matrix.build}}"
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependency
      run: sudo apt install libssl-dev gcc g++ libspdlog-dev libfmt-dev llvm-14-dev libedit-dev libcxxopts-dev libpfm4-dev ninja-build libpcap-dev libopenblas-pthread-dev libibverbs-dev librdmacm-dev
      
    - name: Checkout
      run: |
        git submodule update --init --recursive

    - name: Install Tensorflow
      run: |
        cd lib/wasm-micro-runtime/core/deps && bash ./install_tensorflow.sh

    - name: Install WASI SDK
      run: |
        cd /opt
        sudo wget http://108.181.27.85/wasi/wasi-sdk-21.0-linux.tar.gz
        sudo tar -xzf wasi-sdk-*.tar.gz
        mv wasi-sdk-21 wasi-sdk
        
    - name: Make WASI Socket Ext
      run: |
        cd lib/wasm-micro-runtime/samples/socket-api/
        cmake . -DCMAKE_C_COMPILER_WORK=1 -DCMAKE_CXX_COMPILER_WORK=1
        make -j

    - name: Install AOT wamrc
      run: |
        cd lib/wasm-micro-runtime/wamr-compiler
        mkdir build
        cd build
        cmake .. -DWAMR_BUILD_AOT=1 -DWAMR_BUILD_AOT_STACK_FRAME=1 -DWAMR_BUILD_DEBUG_AOT=0 -DWAMR_BUILD_DUMP_CALL_STACK=1 -DWAMR_BUILD_CUSTOM_NAME_SECTION=1 -DWAMR_BUILD_SHARED_MEMORY=1 -DWAMR_BUILD_WITH_CUSTOM_LLVM=1 -DWAMR_BUILD_LOAD_CUSTOM_SECTION=1 -DLLVM_DIR=/usr/lib/llvm-14/lib/cmake/llvm/
        make -j

    - name: configure cmake
      run: sudo touch /usr/lib/llvm-14/lib/libMLIRSupportIndentedOstream.a && cd lib/wasm-micro-runtime/core/deps/ && bash ./install_tensorflow.sh && cd ../../../../ &&  cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build}} -DLLVM_DIR=/usr/lib/llvm-14/lib/cmake/llvm/

    - name: build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{matrix.build}} &&  cp MVVM_checkpoint MVVM_checkpoint-ubuntu && cp MVVM_restore MVVM_restore-ubuntu

    - uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/tags/') && ${{matrix.build}} == "Release"
      with:
        name: MVVM_checkpoint-ubuntu
        path: MVVM_checkpoint-ubuntu

    - uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/tags/') && ${{matrix.build}} == "Release"
      with:
        name: MVVM_restore-ubuntu
        path: ${{runner.workspace}}/build/MVVM_restore-ubuntu

    - uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/tags/') && ${{matrix.build}} == "Release"
      with:
        name: gateway
        path: ${{runner.workspace}}/build/gateway/gateway

    - name: Publish
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && ${{matrix.build}} == "Release"
      with:
        files: |
          ${{runner.workspace}}/build/MVVM_checkpoint-ubuntu
          ${{runner.workspace}}/build/MVVM_restore-ubuntu
          ${{runner.workspace}}/build/gateway/gateway
        generate_release_notes: true
        draft: true
